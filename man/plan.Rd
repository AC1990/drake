% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plan.R
\name{plan}
\alias{plan}
\title{Function \command{plan}}
\usage{
plan(..., list = character(0), file_targets = FALSE,
  strings_in_dots = c("filenames", "literals"))
}
\arguments{
\item{...}{pieces of command named according to their respective targets.
Recall that drake uses single quotes to denote external files
and double-quoted strings as ordinary strings.
Use the \command{strings_in_dots} argument to control the
quoting in \command{...}.}

\item{list}{named character vector of pieces of command named
according to their respective targets}

\item{file_targets}{logical. If \command{TRUE}, targets are single-quoted
to tell drake that these are external files that should be generated
in the next call to \command{\link{run}()}.}

\item{strings_in_dots}{character scalar. If \command{"filenames"},
all character strings in \command{...} will be treated as names of file
dependencies (single-quoted). If \command{"literals"}, all
character strings in \command{...} will be treated as ordinary
strings, not dependencies of any sort (double-quoted). 
(This does not affect the names of free-form arguments passed to 
\command{...}). Because of R's
automatic parsing/deparsing behavior, strings in \command{...}
cannot simply be left alone.}
}
\value{
data frame of targets and command
}
\description{
Turns a named collection of command/target pairs into 
a plan plan data frame for \command{\link{run}} and 
\command{\link{check}}.
}
\details{
Drake uses single quotes to denote external files
and double-quoted strings as ordinary strings. 
Quotes in the \command{list} argument are left alone,
but R messes with quotes when it parses the freeform 
arguments in \command{...}, so use the \command{strings_in_dots}
argument to control the quoting in \command{...}.
}
\seealso{
\command{link{check}}, \command{\link{run}},
}

