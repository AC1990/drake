% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Makefile.R
\name{r_recipe_wildcard}
\alias{r_recipe_wildcard}
\title{r_recipe_wildcard}
\usage{
r_recipe_wildcard()
}
\description{
Function to give the R recipe wildcard
for Makefiles.
}
\details{
Makefile recipes to build targets are customizable.
The default recipe is \code{Rscript -e 'R_RECIPE'}, where
\code{R_RECIPE} is the wildcard for the recipe in R for making the target.
In writing the Makefile, \code{R_RECIPE} is replaced with something like
\code{drake::mk("name_of_target", "path_to_cache")}.
So when you call
\code{make(..., parallelism = "Makefile", recipe_command = "R -e 'R_RECIPE' -q")}, # nolint
from within R, the \code{Makefile} builds each target
with the \code{Makefile} recipe,
\code{R -e 'drake::mk("this_target", "path_to_cache")' -q}.
But since \code{R -q -e} fails on Windows,
the default \code{recipe_command} argument is
\code{"Rscript -e 'R_RECIPE'"}
(equivalently just \code{"Rscript -e"}),
so the default \code{Makefile} recipe for each target is
\code{Rscript -e 'drake::mk("this_target", "path_to_cache")'}.
}
\examples{
default_recipe_command()
r_recipe_wildcard()
\dontrun{
load_basic_example()
# Look at the Makefile generated by the following.
make(my_plan, paralleliem = "Makefile")
# Generates a Makefile with "R -q -e" rather than
# "Rscript -e".
# Be aware the R -q -e fails on Windows.
make(my_plan, parallelism = "Makefile", jobs = 2
  recipe_command = "R -q -e")
# Same thing:
clean()
make(my_plan, parallelism = "Makefile", jobs = 2,
  recipe_command = "R -q -e 'R_RECIPE'")
clean()
make(my_plan, parallelism = "Makefile", jobs = 2,
  recipe_command = "R -e 'R_RECIPE' -q")
}
}
\seealso{
\code{\link{default_recipe_command}}
}
