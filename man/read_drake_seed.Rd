% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read.R
\name{read_drake_seed}
\alias{read_drake_seed}
\title{Read the pseudo-random number generator seed of the project.}
\usage{
read_drake_seed(path = getwd(), search = TRUE, cache = NULL,
  verbose = TRUE)
}
\arguments{
\item{path}{Root directory of the drake project,
or if \code{search} is \code{TRUE}, either the
project root or a subdirectory of the project.}

\item{search}{logical. If \code{TRUE}, search parent directories
to find the nearest drake cache. Otherwise, look in the
current working directory only.}

\item{cache}{optional drake cache. See code{\link{new_cache}()}.
If \code{cache} is supplied,
the \code{path} and \code{search} arguments are ignored.}

\item{verbose}{whether to print console messages}
}
\value{
A workflow plan data frame.
}
\description{
When a project is created with \code{\link[=make]{make()}}
or \code{\link[=drake_config]{drake_config()}}, the project's pseudo-random number generator
seed is cached. Then, unless the cache is destroyed,
the seeds of all the targets will deterministically depend on
this one central seed. That way, reproducibility is protected,
even under randomness.
}
\examples{
\dontrun{
cache <- storr::storr_environment() # For the examples.
my_plan <- drake_plan(
  target1 = sqrt(1234),
  target2 = rnorm(n = 1, mean = target1)
)
digest::digest(.Random.seed) # Take the fingerprint of the current seed.
make(my_plan, cache = cache) # Run the project, build the targets.
digest::digest(.Random.seed) # make() protects your R session's seed from being changed.
# Drake takes the seed from the R session that originally created the cache.
digest::digest(read_drake_seed(cache = cache))
readd(target2, cache = cache) # Here is some randomly-generated data.
clean(target2, cache = cache) # Oops, I removed the data.
x <- runif(1) # Maybe I also changed the R session's seed.
digest::digest(.Random.seed) # Different from before.
make(my_plan, cache = cache) # Rebuild target2.
# Same as before:
digest::digest(read_drake_seed(cache = cache))
digest::digest(.Random.seed)
readd(target2, cache = cache)
}
}
\seealso{
\code{\link[=read_drake_config]{read_drake_config()}}
}
