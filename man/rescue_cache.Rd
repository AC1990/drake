% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cache_interaction.R
\name{rescue_cache}
\alias{rescue_cache}
\title{Function rescue_cache}
\usage{
rescue_cache(path = getwd(), search = TRUE, verbose = TRUE,
  force = FALSE, cache = drake::get_cache(path = path, search = search,
  verbose = verbose, force = force), jobs = 1)
}
\arguments{
\item{path}{same as for \code{\link{get_cache}()}}

\item{search}{same as for \code{\link{get_cache}()}}

\item{verbose}{same as for \code{\link{get_cache}()}}

\item{force}{same as for \code{\link{get_cache}()}}

\item{cache}{a `storr` cache object}

\item{jobs}{number of jobs for light parallelism
(disabled on Windows)}
}
\value{
The rescued drake/storr cache.
}
\description{
Sometimes, \code{storr} caches may have
dangling orphaned files that prevent you from loading or cleaning.
This function tries to remove those files so you can use the
cache normally again.
}
\examples{
\dontrun{
load_basic_example() # Load the canonical example.
make(my_plan) # Run the project, build targets. This creates the cache.
# Remove dangling cache files that could cause errors.
rescue_cache(jobs = 2)
}
}
\seealso{
\code{\link{get_cache}}, \code{\link{cached}}
}
